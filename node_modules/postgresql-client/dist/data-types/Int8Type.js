"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayInt8Type = exports.Int8Type = void 0;
const definitions_1 = require("../definitions");
const bigint_methods_1 = require("../util/bigint-methods");
const maxSafeInteger = BigInt(Number.MAX_SAFE_INTEGER);
exports.Int8Type = {
    name: 'int8',
    oid: definitions_1.DataTypeOIDs.int8,
    jsType: 'BigInt',
    parseBinary(buf) {
        const v = typeof buf.readBigInt64BE === 'function' ?
            buf.readBigInt64BE(0) : (0, bigint_methods_1.readBigInt64BE)(buf);
        return v >= -maxSafeInteger && v <= maxSafeInteger ? Number(v) : v;
    },
    encodeBinary(buf, v) {
        buf.writeBigInt64BE(v);
    },
    parseText(s) {
        const v = BigInt(s);
        return v >= -maxSafeInteger && v <= maxSafeInteger ? Number(v) : v;
    },
    isType(v) {
        return typeof v === 'bigint' ||
            (typeof v === 'number' && Number.isInteger(v));
    }
};
exports.ArrayInt8Type = Object.assign(Object.assign({}, exports.Int8Type), { name: '_int8', oid: definitions_1.DataTypeOIDs._int8, elementsOID: definitions_1.DataTypeOIDs.int8 });
